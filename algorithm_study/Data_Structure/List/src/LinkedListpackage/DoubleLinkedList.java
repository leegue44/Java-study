package LinkedListpackage;

import java.util.Comparator;

public class DoubleLinkedList<E> {
	class Node<E>{
private E data;// 데이터
private Node<E> prev;//앞쪽 포인터(앞쪽 노드에 대한 참조)
private Node<E> next;//뒤쪽 포닝터 (다음 노드에 대한 참조)
	
	Node(){
		data =null;
		prev=next=this;
	}
	Node (E obj,Node<E> prev,Node<E> next){
		data = obj;
		this.prev=prev;
		this.next=next;
	}
	}
	private Node<E> head;//머리 포인터(참조하는 곳은 더미노트)
	private Node<E> crnt;// 선택 포인터
	public DoubleLinkedList() {
		head=crnt =new Node<E>();//더미 노드를 생성
	}
	public boolean isEmpty() {
		return head.next ==head;
	}
	public E search(E obj,Comparator<? super E> c) {
		Node<E> ptr = head.next;//현재 스캔 중인 노드
		while(ptr !=head) {
			if(c.compare(obj, ptr.data)==0) {
				crnt = ptr;
				return ptr.data;//검 색 성공
			}
			ptr =ptr.next;//다음 노드를 선택
		}
		return null;//검색 실패 
	}
	
}
